/************************************************************************
*
* Author: Andrew O'Grady
* Question 4 Homework 4
*
************************************************************************/

#include<bits/stdc++.h>
using namespace std;

//new node
struct node
{
    int data;
    struct node *left, *right;
};

//creating new node
struct node* newNode(int data)
{
    struct node* node = (struct node*)malloc(sizeof(struct node));
    node->data = data;
    node->left = node->right = NULL;
    return (node);
}

//sum total path of tree
int treePathsSumUtil(struct node *root, int val)
{

    if (root == NULL) return 0;
        val = (val*10 + root->data);
    if (root->left==NULL && root->right==NULL)
        return val;
    return treePathsSumUtil(root->left, val) +
        treePathsSumUtil(root->right, val);
}

int treePathsSum(struct node *root)
{
    return treePathsSumUtil(root, 0);
}

/*Driver Function */
int main()
{
    struct node *root = newNode(1);
    root->left = newNode(2);
    root->right = newNode(3);
    root->left->left = newNode(4);
    root->left->right = newNode(5);
    root->right->right = newNode(6);
    root->left->right->left = newNode(7);
    root->left->right->right = newNode(8);
    cout<<"Sum of all paths is "<<treePathsSum(root);
    return 0;
}
